# TODO Project - –£–≥–∞–¥–∞–π–∫–∞ —á–∏—Å–µ–ª NEW üîÉ
# –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞: –ø—Ä–æ–≥—Ä–∞–º–º–∞ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ
# –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ –æ—Ç 1 –¥–æ 100 –∏ –ø—Ä–æ—Å–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É–≥–∞–¥–∞—Ç—å —ç—Ç–æ —á–∏—Å–ª–æ.
# –ï—Å–ª–∏ –¥–æ–≥–∞–¥–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±–æ–ª—å—à–µ —Å–ª—É—á–∞–π–Ω–æ–≥–æ —á–∏—Å–ª–∞,
# —Ç–æ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ '–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑'.
# –ï—Å–ª–∏ –¥–æ–≥–∞–¥–∫–∞ –º–µ–Ω—å—à–µ —Å–ª—É—á–∞–π–Ω–æ–≥–æ —á–∏—Å–ª–∞, —Ç–æ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ
# '–°–ª–∏—à–∫–æ–º –º–∞–ª–æ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑'. –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–≥–∞–¥—ã–≤–∞–µ—Ç —á–∏—Å–ª–æ,
# —Ç–æ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –ø–æ–∑–¥—Ä–∞–≤–∏—Ç—å –µ–≥–æ –∏ –≤—ã–≤–µ—Å—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ '–í—ã —É–≥–∞–¥–∞–ª–∏, –ø–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!'.
#
# –°–æ—Å—Ç–∞–≤–ª—è—é—â–∏–µ –ø—Ä–æ–µ–∫—Ç–∞:
#
# –¶–µ–ª—ã–µ —á–∏—Å–ª–∞ (—Ç–∏–ø int);
# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ;
# –í–≤–æ–¥ / –≤—ã–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö (—Ñ—É–Ω–∫—Ü–∏–∏ input() –∏ print());
# –£—Å–ª–æ–≤–Ω—ã–π –æ–ø–µ—Ä–∞—Ç–æ—Ä (if/elif/else);
# –¶–∏–∫–ª while;
# –ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª;
# –û–ø–µ—Ä–∞—Ç–æ—Ä—ã break, continue;
# –†–∞–±–æ—Ç–∞ —Å –º–æ–¥—É–ª–µ–º random –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª.

# 1. –î–æ–±–∞–≤—å—Ç–µ –ø–æ–¥—Å—á–µ—Ç –ø–æ–ø—ã—Ç–æ–∫, —Å–¥–µ–ª–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º. –ö–æ–≥–¥–∞ —á–∏—Å–ª–æ –æ—Ç–≥–∞–¥–∞–Ω–æ,
# –ø—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –ø–æ–∫–∞–∑–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫;
# 2. –î–æ–±–∞–≤—å—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –Ω–æ–≤–æ–≥–æ —á–∏—Å–ª–∞ (–ø–æ–≤—Ç–æ—Ä–Ω–∞—è –∏–≥—Ä–∞), –ø–æ—Å–ª–µ —Ç–æ–≥–æ,
# –∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–≥–∞–¥–∞–ª —á–∏—Å–ª–æ;
# 3. –î–æ–±–∞–≤–∏—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —É–∫–∞–∑–∞–Ω–∏—è –ø—Ä–∞–≤–æ–π –≥—Ä–∞–Ω–∏—Ü—ã
# –¥–ª—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –≤—ã–±–æ—Ä–∞ —á–∏—Å–ª–∞ (–æ—Ç 1 –¥–æ n).

def dictionary(phrase):
    match phrase:
        case 'welcome':
            return '(dict) –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∏–≥—Ä—É —É–≥–∞–¥–∞–π —á–∏—Å–ª–æ'
        case 'menu':
            return ['1. –ò–≥—Ä–∞—Ç—å", "2. –ù–∞—Å—Ç—Ä–æ–π–∫–∏", "3. –í—ã—Ö–æ–¥']
        case '<':
            return '(dict) –í–∞—à–µ —á–∏—Å–ª–æ –ú–µ–Ω—å—à–µ –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–≥–æ'
        case '>':
            return '(dict) –í–∞—à–µ —á–∏—Å–ª–æ –ë–æ–ª—å—à–µ –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–≥–æ'
        case '=':
            return '(dict) –í—ã —É–≥–∞–¥–∞–ª–∏ —á–∏—Å–ª–æ! –ü–æ–∑–¥—Ä–∞–≤–ª—è—é!'
        case 'bye':
            return '(dict) –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º (Y): '


def is_number(st):
    return True if st.isDigit() else False


def input_num():
    while True:
        st = input()
        if is_number(st): return int(st)


def game_loop():  # –¶–∏–∫–ª –∏–≥—Ä—ã
    pass


while True:  # –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª
    print(dictionary('welcome'))
    print(dictionary('menu'))
    
    game_loop()

    if input(dictionary('bye')).lower() != 'y':
        break
